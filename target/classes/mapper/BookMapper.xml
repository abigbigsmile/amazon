<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smile.amazon.mapper.BookMapper">
  <resultMap id="BaseResultMap" type="com.smile.amazon.model.Book">
    <id column="book_id" jdbcType="INTEGER" property="bookId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="cover_image" jdbcType="VARCHAR" property="coverImage" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="publish" jdbcType="VARCHAR" property="publish" />
    <result column="publish_time" jdbcType="DATE" property="publishTime" />
    <result column="translator" jdbcType="VARCHAR" property="translator" />
    <result column="ISBN" jdbcType="CHAR" property="isbn" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="content_validity" jdbcType="VARCHAR" property="contentValidity" />
    <result column="author_validity" jdbcType="VARCHAR" property="authorValidity" />
  </resultMap>


  <sql id="Base_Column_List">
    book_id, name, author, cover_image, type, publish, publish_time, translator, ISBN, 
    price, content_validity, author_validity
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer"  resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from book
    where book_id = #{bookId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from book
    where book_id = #{bookId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.smile.amazon.model.Book">
    insert into book (book_id, name, author, 
      cover_image, type, publish, 
      publish_time, translator, ISBN, 
      price, content_validity, author_validity
      )
    values (#{bookId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{coverImage,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{publish,jdbcType=VARCHAR}, 
      #{publishTime,jdbcType=DATE}, #{translator,jdbcType=VARCHAR}, #{isbn,jdbcType=CHAR}, 
      #{price,jdbcType=DOUBLE}, #{contentValidity,jdbcType=VARCHAR}, #{authorValidity,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.smile.amazon.model.Book">
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        book_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="coverImage != null">
        cover_image,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="publish != null">
        publish,
      </if>
      <if test="publishTime != null">
        publish_time,
      </if>
      <if test="translator != null">
        translator,
      </if>
      <if test="isbn != null">
        ISBN,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="contentValidity != null">
        content_validity,
      </if>
      <if test="authorValidity != null">
        author_validity,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="coverImage != null">
        #{coverImage,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="publish != null">
        #{publish,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null">
        #{publishTime,jdbcType=DATE},
      </if>
      <if test="translator != null">
        #{translator,jdbcType=VARCHAR},
      </if>
      <if test="isbn != null">
        #{isbn,jdbcType=CHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="contentValidity != null">
        #{contentValidity,jdbcType=VARCHAR},
      </if>
      <if test="authorValidity != null">
        #{authorValidity,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.smile.amazon.model.Book">
    update book
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="coverImage != null">
        cover_image = #{coverImage,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="publish != null">
        publish = #{publish,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null">
        publish_time = #{publishTime,jdbcType=DATE},
      </if>
      <if test="translator != null">
        translator = #{translator,jdbcType=VARCHAR},
      </if>
      <if test="isbn != null">
        ISBN = #{isbn,jdbcType=CHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="contentValidity != null">
        content_validity = #{contentValidity,jdbcType=VARCHAR},
      </if>
      <if test="authorValidity != null">
        author_validity = #{authorValidity,jdbcType=VARCHAR},
      </if>
    </set>
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.smile.amazon.model.Book">
    update book
    set name = #{name,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      cover_image = #{coverImage,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      publish = #{publish,jdbcType=VARCHAR},
      publish_time = #{publishTime,jdbcType=DATE},
      translator = #{translator,jdbcType=VARCHAR},
      ISBN = #{isbn,jdbcType=CHAR},
      price = #{price,jdbcType=DOUBLE},
      content_validity = #{contentValidity,jdbcType=VARCHAR},
      author_validity = #{authorValidity,jdbcType=VARCHAR}
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>

  <select id="bookList" resultMap="BaseResultMap">
    select * from book
  </select>



  <!-- 查询BookDetailDTO -->
  <select id="bookDetailDTO" parameterType="java.lang.Integer" resultMap="BookDetailResultMap">
      SELECT book.*,
              star.*,
              (SELECT COUNT(*) FROM COMMENT,USER WHERE comment.book_id=#{bookId} AND comment.user_id=user.user_id) AS comment_count,
              (SELECT COUNT(*) FROM review,user WHERE review.book_id=#{bookId} AND review.user_id=review.user_id) AS review_count
      FROM book,star
      WHERE book.book_id=#{bookId} AND book.book_id = star.book_id
  </select>
  <resultMap id="BookDetailResultMap" type="com.smile.amazon.dto.BookDetailDTO" extends="BaseResultMap">
    <result property="commentCount" column="comment_count"/>
    <result property="reviewCount" column="review_count"/>
    <association property="star" resultMap="com.smile.amazon.mapper.StarMapper.BaseResultMap"/>
    <collection property="commentList" ofType="commentQueryVO" column="book_id" select="findCommentQuery"/>
    <collection property="reviewList" ofType="ReviewQueryVO" column="book_id" select="findReviewQueryVO"/>
  </resultMap>
  <select id="findCommentQuery" parameterType="java.lang.Integer" resultMap="CommentQueryVOmap">
    select comment.*,user.user_name
    from comment,user
    where comment.book_id=#{bookId} and comment.user_id=user.user_id
  </select>
  <resultMap id="CommentQueryVOmap" type="com.smile.amazon.queryVO.CommentQueryVO">
    <id column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="book_id" jdbcType="INTEGER" property="bookId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="comment_time" jdbcType="TIMESTAMP" property="commentTime" />
    <result column="love" jdbcType="TINYINT" property="love" />
    <result column="comment_content" jdbcType="VARCHAR" property="commentContent" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
  </resultMap>
  <select id="findReviewQueryVO" parameterType="int" resultMap="ReviewQueryVOmap">
    select review.*,user.user_name, user.image
    from review,user
    where review.book_id=#{bookId} and review.user_id = user.user_id
  </select>
  <resultMap id="ReviewQueryVOmap" type="reviewQueryVO" extends="com.smile.amazon.mapper.ReviewMapper.BaseResultMap">
    <result property="userName" column="user_name"/>
    <result property="image" column="image"/>
  </resultMap>

  <!-- 查询BookReviewDTO -->
  <select id="bookReviewDTO" parameterType="java.lang.Integer" resultMap="BookReviewResultMap">
    select review.*,book.*,user.user_name,user.image
    from review,book,user
    where review.review_id=#{reviewId} and review.book_id=book.book_id and review.user_id=user.user_id
  </select>
  <resultMap id="BookReviewResultMap" type="com.smile.amazon.dto.BookReviewDTO" extends="com.smile.amazon.mapper.ReviewMapper.BaseResultMap">
    <result property="userName" column="user_name"/>
    <result property="image" column="image"/>
    <association property="book" javaType="com.smile.amazon.model.Book" resultMap="BaseResultMap"/>
    <collection property="reviewCommentList" ofType="ReviewComment" column="review_id" select="findReviewCommentQueryVO"/>
  </resultMap>
  <select id="findReviewCommentQueryVO" parameterType="java.lang.Integer" resultMap="ReviewCommentQueryVOmap">
      select review_comment.*,user.user_name,user.image
      from review_comment,user
      where review_comment.review_id=#{reviewId} and review_comment.user_id=user.user_id
      order by rcomment_time desc
  </select>
  <resultMap id="ReviewCommentQueryVOmap" type="com.smile.amazon.queryVO.ReviewCommentQueryVO" extends="com.smile.amazon.mapper.ReviewCommentMapper.BaseResultMap">
    <result property="userName" column="user_name"/>
    <result property="image" column="image"/>
  </resultMap>

</mapper>